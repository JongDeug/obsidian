{
	"id": "ad799af60b3aed2e7cd4aa1a9405f412",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"lecture/lec27.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >= 0.7.0 < 0.9.0;\r\n\r\n// try/catch\r\n\r\ncontract lec27{\r\n\r\n    /*\r\n    0.6 버전 이후\r\n\r\n    try/catch 왜 써야 하는가?\r\n        기존의 에러 핸들러 assert/revert/require는 에러를 발생시키고 프로그램을 끝냄.\r\n        그러나, try/catch는 에러가 났음에도 프로그램을 종료시키지 않고 어떤 대처를 하게 만들 수 있음.\r\n    \r\n    try/catch 특징\r\n        1. try/catch문 안에서 assert/revert/require를 통해 에러가 난다면 catch는 에러를 잡지 못하고,\r\n        개발자가 의도했다고 판단하여 정상적으로 프로그램을 끝낸다. (밖에서 assert/revert/require를 통해 에러가 난다면 핸들가능)\r\n\r\n        2. \r\n    */\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"lecture/lec27.sol": {
				"lec27": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lecture/lec27.sol\":90:775  contract lec27{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lecture/lec27.sol\":90:775  contract lec27{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b8ff2bec0be9cef1133fa2d0fc44cb9baade34a8509e495be28eee9da72fe5e564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b8ff2bec0be9cef1133fa2d0fc44cb9baade34a8509e495be28eee9da72fe5e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SELFDESTRUCT 0x2B 0xEC SIGNEXTEND 0xE9 0xCE CALL SGT EXTCODEHASH LOG2 0xD0 0xFC DIFFICULTY 0xCB SWAP12 0xAA 0xDE CALLVALUE 0xA8 POP SWAP15 0x49 JUMPDEST 0xE2 DUP15 0xEE SWAP14 0xA7 0x2F 0xE5 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "90:685:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b8ff2bec0be9cef1133fa2d0fc44cb9baade34a8509e495be28eee9da72fe5e564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SELFDESTRUCT 0x2B 0xEC SIGNEXTEND 0xE9 0xCE CALL SGT EXTCODEHASH LOG2 0xD0 0xFC DIFFICULTY 0xCB SWAP12 0xAA 0xDE CALLVALUE 0xA8 POP SWAP15 0x49 JUMPDEST 0xE2 DUP15 0xEE SWAP14 0xA7 0x2F 0xE5 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "90:685:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 90,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 90,
									"end": 775,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 775,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8ff2bec0be9cef1133fa2d0fc44cb9baade34a8509e495be28eee9da72fe5e564736f6c63430008070033",
									".code": [
										{
											"begin": 90,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 90,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 90,
											"end": 775,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lecture/lec27.sol\":\"lec27\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lecture/lec27.sol\":{\"keccak256\":\"0xa292f72327d07c0d6635a03a1cf983c005837ef5afe44dde90764b58b6da4bdc\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://602d3e180ce85cf28e06d3cfb0c8bc89908ebdb0c6e9e342646f578e99ecb1d1\",\"dweb:/ipfs/QmfGTqMf79EDYbGy1BbhPNLVYJDKMhbsmMtXUUtd6HVSkJ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lecture/lec27.sol": {
				"ast": {
					"absolutePath": "lecture/lec27.sol",
					"exportedSymbols": {
						"lec27": [
							2
						]
					},
					"id": 3,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "lec27",
							"nameLocation": "99:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "90:685:0",
							"usedErrors": []
						}
					],
					"src": "37:738:0"
				},
				"id": 0
			}
		}
	}
}